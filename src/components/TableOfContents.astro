---
interface Props {
  content: string;
}

const { content } = Astro.props;

// Функция для извлечения заголовков из Markdown контента
function extractHeadings(markdown: string) {
  const headingRegex = /^(#{1,6})\s+(.+)$/gm;
  const headings = [];
  let match;

  while ((match = headingRegex.exec(markdown)) !== null) {
    const depth = match[1].length;
    const text = match[2].trim();
    // Создаем slug из текста заголовка (простая версия)
    const slug = text
      .toLowerCase()
      .replace(/[^a-z0-9а-яё\s-]/g, '')
      .replace(/\s+/g, '-')
      .replace(/-+/g, '-')
      .replace(/^-|-$/g, '');

    headings.push({
      depth,
      text,
      slug
    });
  }

  return headings;
}

const headings = extractHeadings(content);
---

<div>
  {headings.map((heading) => (
    <div class={`toc-item depth-${heading.depth}`}>
      <a href={`#${heading.slug}`}>{heading.text}</a>
    </div>
  ))}
</div>

<style>
  .toc-item {
    margin-bottom: 8px;
  }

  .toc-item.depth-1 {
    margin-left: 0;
    font-weight: bold;
  }

  .toc-item.depth-2 {
    margin-left: 16px;
    font-weight: normal;
  }

  .toc-item.depth-3 {
    margin-left: 32px;
    font-weight: normal;
  }

  .toc-item.depth-4 {
    margin-left: 48px;
    font-weight: normal;
  }

  .toc-item.depth-5 {
    margin-left: 64px;
    font-weight: normal;
  }

  .toc-item.depth-6 {
    margin-left: 80px;
    font-weight: normal;
  }

  .toc-item a {
    text-decoration: none;
    color: #000000;
  }

  .toc-item a:hover {
    color: #e4a672;
  }
</style>