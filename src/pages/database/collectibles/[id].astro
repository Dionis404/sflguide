---
import Layout from '../../../layouts/GuidesLayout.astro';
import tempApiData from '../../../data/tempapidata.json';

export async function getStaticPaths() {
  const paths = tempApiData.collectibles.map((item) => ({
    params: { id: item.id.toString() },
    props: { item },
  }));
  return paths;
}

const { item } = Astro.props;
const title = item.name || `ID: ${item.id}`;
---

<Layout frontmatter={{ title }}>
  <div class="item-detail">
    <a href="/database/collectibles" class="back-link">← Назад к списку коллекционных предметов</a>

    <div class="item-header">
      <img src={`/nft/collectibles/${item.id}.png`} alt={item.name} class="item-image" />
      <div class="item-info">
        <h1>{title}</h1>
        <p><strong>ID:</strong> {item.id}</p>
        <p><strong>Коллекция:</strong> {item.collection}</p>
        <p><strong>Floor Price:</strong> {item.floor} SFL</p>
        <p><strong>Last Sale Price:</strong> {item.lastSalePrice} SFL</p>
        <p><strong>Supply:</strong> {item.supply}</p>
        {item.have_boost && item.boost_text && (
          <p><strong>Boost:</strong> {item.boost_text}</p>
        )}
      </div>
    </div>

    <div class="item-description">
      <h2>Описание</h2>
      <p>Здесь будет подробное описание предмета. Можно добавить историю, особенности, советы по использованию и другую информацию.</p>
    </div>
  </div>
</Layout>

<style>
.item-detail {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

.back-link {
  display: inline-block;
  margin-bottom: 20px;
  color: #007bff;
  text-decoration: none;
}

.back-link:hover {
  text-decoration: underline;
}

.item-header {
  display: flex;
  gap: 20px;
  margin-bottom: 30px;
  align-items: flex-start;
}

.item-image {
  max-width: 200px;
  height: auto;
  border-radius: 8px;
}

.item-info h1 {
  margin-top: 0;
  margin-bottom: 15px;
}

.item-info p {
  margin: 8px 0;
}

.item-description {
  margin-top: 30px;
}

.item-description h2 {
  border-bottom: 2px solid #eee;
  padding-bottom: 10px;
}
</style>